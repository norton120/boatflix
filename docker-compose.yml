services:

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - .env
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_REMOVE_VOLUMES=true
      - WATCHTOWER_NOTIFICATIONS_HOSTNAME=arr-stack
      - WATCHTOWER_NOTIFICATIONS=shoutrrr
    logging:
      driver: "json-file"
      options:
        max-size: "2m"
        max-file: "3"
    restart: unless-stopped
    networks:
      - boatflix

  autoheal:
    image: willfarrell/autoheal:1.2.0
    container_name: autoheal
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
      - AUTOHEAL_INTERVAL=5
      - AUTOHEAL_START_PERIOD=30
      - AUTOHEAL_DEFAULT_STOP_TIMEOUT=10
    restart: always
  index:
    image: httpd:latest
    container_name: index
    volumes:
      - ./index.html:/usr/local/apache2/htdocs/index.html
    networks:
      - boatflix

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    env_file:
      - .env
    environment:
      - LOG_LEVEL=debug
    volumes:
      - /data/configs/jellyseerr/config:/app/config
    restart: always
    ports:
      - 5055:5055
    networks:
      - boatflix

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    env_file:
      - .env
    volumes:
      - /data/configs/jellyfin/config:/config
      - /data/media/Shows:/data/Shows
      - /data/media/Movies:/data/Movies
      - /data/media/Music:/data/Music
      - /data/media/Books:/data/Books
    restart: unless-stopped
    ports:
      - 8096:8096
      - 8920:8920
    networks:
      - boatflix

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /data/configs/prowlarr:/config
      - /data/media:/mnt/media
      - /data/media/Downloads:/mnt/downloads
    depends_on:
      flaresolverr:
        condition: service_started
    env_file:
      - .env
    ports:
      - 9696:9696
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always
    networks:
      - boatflix

  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    env_file:
      - .env
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always
    networks:
      - boatflix

  qbittorrent:
    image: linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:vpn"
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /data/configs/qbittorrent:/config
      - /data/media/Downloads:/mnt/downloads
    env_file:
      - .env
    environment:
      - WEBUI_PORT=8081
    depends_on:
      vpn:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /data/configs/lidarr:/config
      - /data/media:/mnt/media
      - /data/media/Downloads:/mnt/downloads
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always
    ports:
      - 8686:8686
    networks:
      - boatflix

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /data/configs/radarr:/config
      - /data/media/Movies:/movies
      - /data/media/Downloads:/mnt/downloads
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always
    ports:
      - 7878:7878
    networks:
      - boatflix

  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /data/configs/readarr:/config
      - /data/media/Books:/mnt/books
      - /data/media/Downloads:/mnt/downloads
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always
    ports:
      - 8787:8787
    networks:
      - boatflix

  calibri:
    image: linuxserver/calibre:latest
    container_name: calibri
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /data/configs/calibri:/config
      - /data/media/Books:/mnt/books
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always
    ports:
      - "8080:80"
    networks:
      - boatflix

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /data/configs/sonarr:/config
      - /data/media/Shows:/mnt/media/shows
      - /data/media/Downloads:/mnt/downloads
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always
    ports:
      - 8989:8989
    networks:
      - boatflix

  bazarr:
    image: linuxserver/bazarr:latest
    container_name: bazarr
    logging:
      options:
        max-size: "5M"
        max-file: "3"
    volumes:
      - /data/configs/bazarr:/config
      - /data/media:/mnt/media
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "curl", "-fsL", "ipconfig.me"]
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 30s
      start_interval: 5s
    restart: always
    ports:
      - 6767:6767
    networks:
      - boatflix
  vpn:
    image: qmcgaw/gluetun
    container_name: vpn
    cap_add:
      - NET_ADMIN
    volumes:
      - /data/configs/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=private internet access
      - OPENVPN_USER=${PIA_USER}
      - OPENVPN_PASSWORD=${PIA_PASS}
      - SERVER_REGIONS=Netherlands
    ports:
      - 8080:8080 # qBittorrent Web UI port
      - 6881:6881 # qbittorrent
      - 6881:6881/udp # qbittorrent
    networks:
      - boatflix
    restart: unless-stopped
  raspap:
      container_name: raspap
      image: ghcr.io/raspap/raspap-docker:latest
      privileged: true
      network_mode: host
      cgroup: host # uncomment when using an ARM device
      environment:
        - RASPAP_SSID=boatflix
        - RASPAP_SSID_PASS=boatflix
        - RASPAP_COUNTRY=GB
        - RASPAP_WEBGUI_USER=${AP_USER}
        - RASPAP_WEBGUI_PASS=${AP_PASS}
        - RASPAP_WEBGUI_PORT=99
      cap_add:
        - SYS_ADMIN
      volumes:
        - /sys/fs/cgroup:/sys/fs/cgroup:rw
      restart: unless-stopped
networks:
  boatflix:
    driver: bridge
